--This class is the "mediator" between the user and log providers
--It gives easier access and pre-set values like the levels
--And the function "logify" which automatically logs the execution (and outcome)
--Of a function

local levels = {
  trace = colors.blue,
  debug = colors.lightBlue,
  success = colors.lime,
  info = colors.green,
  warn = colors.yellow,
  error = colors.orange,
  fatal = colors.red
}

@class Log {

  initialize(obj) |
    self._obj = obj
    self._sl = "info"
  |

  setObject(obj) |
    self._obj = obj
  |

  setStandardLevel(lvl) |
    self._sl = levels[lvl:lower()] and lvl:lower() or "info"
  |

  log(msg,lvl) |
    lvl = lvl or self._sl
    lvl = lvl:lower() or self._sl
    self._obj:log(lvl:upper(),msg,levels[lvl])
  |

  logify(name, func) |
    self:log(i18n("log.task.start",{task=name}))
    local ok,err = pcall(func)
    if(not ok) then
      self:log(i18n("log.task.error",{task=name, error=err}),"error")
      return false
    else
      self:log(i18n("log.task.success",{task=name}),"success")
      return true
    end
  |

}
