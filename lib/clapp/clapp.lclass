local Command = require "lib.clapp.command"

--[[local function expectTable(check,base)
  for k,v in pairs(base) do
    print(check[k], v, k)
    if(not check[k]) then return error("Key ["..k.."] not present") end
    if(type(check[k]) ~= v) then return error("Key ["..k.."] has the wrong value. Expected "..v..", got "..type(check[k])) end
  end
end
]]

@class Application {

  initialize() |
    self._mainCommand = Command:new()
    self._mainCommand:setMain(true)
  |

  main(exec) |
    self._mainCommand:setExecutor(exec)
  |

  newCommand(name) |
    return self._mainCommand:newSubCommand(name)
  |

  run(...) |
    local args = {...}
    self._mainCommand:execute(args)
  |

}
